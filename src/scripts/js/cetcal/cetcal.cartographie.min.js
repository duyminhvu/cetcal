/** *********************************************************************************
 * Gestion de la recherche par communes pour la cartographie. impl typeahead.js
 */
var global_commune = null; // Commune sélectionnée par la recherche homepage ou avancée.
var global_rav_circle = null; // cercle dessiné afin de représenté le rayon.
var json_communes;
var json_distinct_produits;
var commune_cible = '';
var substringMatcher = function (strs) {
  return function findMatches(q, cb) {

    var matches, substringRegex;
    // an array that will be populated with substring matches
    matches = [];
    // regex used to determine if a string contains the substring `q`
    substrRegex = new RegExp(q, 'i');
    // iterate through the pool of strings and for any string that
    // contains the substring `q`, add it to the `matches` array
    $.each(strs, function (i, str) { if (substrRegex.test(str)) { matches.push(str); } });
    if (Array.isArray(matches) && matches.length === 1) commune_cible = matches[0];
    else commune_cible = undefined;

    cb(matches);
  };
};

var communes = [];
$.ajax({
  url: '/src/app/controller/cet.annuaire.controller.communes.php',
  success: function (json) {
    var cmns = JSON.parse(json);
    json_communes = cmns;
    for (var i = 0; i < cmns.length; ++i) communes.push(cmns[i].libelle);
  },
  error: function (jqXHR, textStatus, errorThrown) {
    console.log(textStatus, errorThrown);
  }
});

$(document).ready(function () {
  // Recherche commune homepage :
  $('#cet-annuaire-recherche-communes-homepage-container .typeahead').typeahead({
    hint: true,
    highlight: true,
    minLength: 1
  },
    {
      name: 'communes',
      source: substringMatcher(communes)
    });

  $('#rav-homepage-envoyer').on('mousedown', function () {
    var json_rav = {};
    json_rav.rav = false;
    json_rav.commune = $('#cet-annuaire-recherche-communes-homepage-value').val();
    json_rav.rayon = null;
    $('.rav-hp-perim').each(function () {
      if ($(this).is(':checked')) json_rav.rayon = $(this).val();
    });
    json_rav.criteresplus = $('#rav-homepage-critere').val();
    json_rav.categories = [];
    $('.rav-hp-categories').each(function () {
      if ($(this).is(':checked') && $(this).attr('data-type') === 'producteur') json_rav.categories.push($(this).val());
    });
    json_rav.entite_types = [];

    /** *************************************************************************************
     * Mettre à jour les critères de recherche avancées avec celles de la recherche simple.
     * La commune et code postal sélectionnée sont mises de côté. Si au chargement de la recherche avancée,
     * une commune est déjà sélectionnée en recherche simple alors l'input typeahead = valeure de l'input
     * typeahead de la recherche simple/homepage.
     */
    global_commune = json_rav.commune;
    $("#rav-rayon > option").each(function () {
      if (this.value == json_rav.rayon) $(this).attr('selected', 'selected');
    });
    $('#rav-critere').val(json_rav.criteresplus);

    fetchResultatsRechercheAvancee(json_rav);
    dessinerRayon(json_rav.commune, json_rav.rayon);
  });

  $('input').each(function () { $(this).attr('autocomplete', 'off'); })

});

/** *************************************************************************************
 * Gestion cartographie.
 */
const init_zoom_factor = 10;
const min_zoom_factor = 4;
const fly_to_zoom_factor = 16;
const icons_array = [];
const marker_collection = [];

$('#cet-annuaire-crt-main').height($(window).height() * 0.56);
var htmlMiniFiche = '';
var cetcrtmainmap = L.map('cet-annuaire-crt-main').setView([44.854, -0.043], init_zoom_factor);

// Prévenir le sé-zoom excessif.
cetcrtmainmap.options.minZoom = min_zoom_factor;
/**
 * Pervent zoom in/out on map.
 * cetcrtmainmap.scrollWheelZoom.disable();
 */
cetcrtmainmap.addControl(new L.Control.Fullscreen({
  title: {
    'false': 'Passer en mode plein écran',
    'true': 'Quitter le mode plein écran'
  }
}));
var clusters = L.markerClusterGroup();
/*
var cetAnnuaireIcon_inscrit = L.icon({
    iconUrl: 'res/content/icons/bonpour1tour/withbg/ferme.png',
    iconSize: [50, 50],
    popupAnchor: [0, -20],
    type: 'Producteur inscrit'
});
icons_array.push({icon: cetAnnuaireIcon_inscrit, desc: 'Producteur partenaire www.decidelabiolocale.org'});

var cetAnnuaireIcon_bioab = L.icon({
    iconUrl: 'res/content/icons/bonpour1tour/withbg/ferme_bioab.png',
    iconSize: [50, 90],
    popupAnchor: [0, -20],
    type: 'Producteur certifié BIO/AB'
});
// Remplacer par les icons correspondant à la catégorie du producteur

icons_array.push({icon: cetAnnuaireIcon_bioab, desc: 'Producteur certifié Agriculture Biologique'});

var cetAnnuaireIcon = L.icon({
    iconUrl: 'res/content/icons/bonpour1tour/withbg/ferme.png',
    iconSize: [50, 50],
    popupAnchor: [0, -20],
    type: 'Producteur pré-inscrit'
});
icons_array.push({icon: cetAnnuaireIcon, desc: 'Producteur certifié AB (en cours de certification, y tendant) référencé dans l\'annuaire cetcal.'});
*/
var cetIconAlgues = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/algues.gif',
  iconSize: [50, 90],
  popupAnchor: [0, -20],
  type: 'Algues'
});
icons_array.push({ icon: cetIconAlgues, desc: 'Algues' });

var cetIconApiculteur = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/apiculteur.gif',
  iconSize: [50, 90],
  popupAnchor: [0, -20],
  type: 'Apiculteur'
});
icons_array.push({ icon: cetIconApiculteur, desc: 'Apiculteur' });

var cetIconBoulangerPatissier = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/boulanger_patissier.gif',
  iconSize: [50, 90],
  popupAnchor: [0, -20],
  type: 'Boulanger Patissier'
});
icons_array.push({ icon: cetIconBoulangerPatissier, desc: 'Boulanger Patissier' });

var cetIconBrasseur = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/brasseur.gif',
  iconSize: [50, 90],
  popupAnchor: [0, -20],
  type: 'Brasseur'
});
icons_array.push({ icon: cetIconBrasseur, desc: 'Brasseur' });

var cetIconChampignons = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/champignons.gif',
  iconSize: [50, 90],
  popupAnchor: [0, -20],
  type: 'Champignons'
});
icons_array.push({ icon: cetIconChampignons, desc: 'Champignons' });

var cetIconCircuitCourt = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/circuit_court.gif',
  iconSize: [50, 90],
  popupAnchor: [0, -20],
  type: 'Circuit Court'
});
icons_array.push({ icon: cetIconCircuitCourt, desc: 'Circuit Court' });

var cetIconConserveConfiture = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/conserves_confitures.gif',
  iconSize: [50, 90],
  popupAnchor: [0, -20],
  type: 'Conserves Confiture'
});
icons_array.push({ icon: cetIconConserveConfiture, desc: 'Conserves Confiture' });

var cetIconCoop = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/coop.gif',
  iconSize: [50, 90],
  popupAnchor: [0, -20],
  type: 'Coop'
});
icons_array.push({ icon: cetIconCoop, desc: 'Coop' });

var cetIconFromage = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/fromages.gif',
  iconSize: [50, 90],
  popupAnchor: [0, -20],
  type: 'Fromages'
});
icons_array.push({ icon: cetIconFromage, desc: 'Fromages' });

var cetIconFruits = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/fruits.gif',
  iconSize: [50, 90],
  popupAnchor: [0, -20],
  type: 'Fruits'
});
icons_array.push({ icon: cetIconFruits, desc: 'Fruits' });

var cetIconGlacesSorbets = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/glaces_sorbets.gif',
  iconSize: [50, 90],
  popupAnchor: [0, -20],
  type: 'Glaces Sorbets'
});
icons_array.push({ icon: cetIconGlacesSorbets, desc: 'Glaces Sorbets' });

var cetIconGrandesCulturesCereales = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/grandescultures_cereales.gif',
  iconSize: [50, 90],
  popupAnchor: [0, -20],
  type: 'Grandes Cultures Céréales'
});
icons_array.push({ icon: cetIconGrandesCulturesCereales, desc: 'Grandes Cultures Céréales' });

var cetIconHorticulteur = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/horticulteur.gif',
  iconSize: [50, 90],
  popupAnchor: [0, -20],
  type: 'Horticulteur'
});
icons_array.push({ icon: cetIconHorticulteur, desc: 'Horticulteur' });

var cetIconLaitier = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/laitier.gif',
  iconSize: [50, 90],
  popupAnchor: [0, -20],
  type: 'Laitier'
});
icons_array.push({ icon: cetIconLaitier, desc: 'Laitier' });

var cetIconLegumes = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/legumes.gif',
  iconSize: [50, 90],
  popupAnchor: [0, -20],
  type: 'Légumes'
});
icons_array.push({ icon: cetIconLegumes, desc: 'Légumes' });

var cetIconOeufs = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/oeufs.gif',
  iconSize: [50, 90],
  popupAnchor: [0, -20],
  type: 'Oeufs'
});
icons_array.push({ icon: cetIconOeufs, desc: 'Oeufs' });

var cetIconPecheurCoquillages = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/pecheur_coquillages.gif',
  iconSize: [50, 90],
  popupAnchor: [0, -20],
  type: 'Pécheur Coquillages'
});
icons_array.push({ icon: cetIconPecheurCoquillages, desc: 'Pécheur Coquillages' });

var cetIconPlantes = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/plantes.gif',
  iconSize: [50, 90],
  popupAnchor: [0, -20],
  type: 'Plantes'
});
icons_array.push({ icon: cetIconPlantes, desc: 'Plantes' });

var cetIconProducteur = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/producteur.gif',
  iconSize: [50, 90],
  popupAnchor: [0, -20],
  type: 'Producteur'
});
icons_array.push({ icon: cetIconProducteur, desc: 'Producteur' });

var cetIconSemencierGraines = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/semencier_graines.gif',
  iconSize: [50, 90],
  popupAnchor: [0, -20],
  type: 'Semencier Graines'
});
icons_array.push({ icon: cetIconSemencierGraines, desc: 'Semencier Graines' });

var cetIconViande = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/viande.gif',
  iconSize: [50, 90],
  popupAnchor: [0, -20],
  type: 'Viande'
});
icons_array.push({ icon: cetIconViande, desc: 'Viande' });

var cetIconViticulteur = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/viticulteur.gif',
  iconSize: [50, 90],
  popupAnchor: [0, -20],
  type: 'Viticulteur'
});
icons_array.push({ icon: cetIconViticulteur, desc: 'Viticulteur' });

var cetIciIcon = L.icon({
  iconUrl: 'res/content/icons/ici.png',
  iconSize: [90, 90]
});

var cetAnnuaireMarcheIcon = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/marche.gif',
  iconSize: [50, 50],
  popupAnchor: [0, -20],
  type: 'Marché'
});
icons_array.push({ icon: cetAnnuaireMarcheIcon, desc: 'Marché référencé dans l\'annuaire cetcal.' });

var amapIcon = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/amap.gif',
  iconSize: [50, 50],
  popupAnchor: [0, -20],
  type: 'AMAP'
});
icons_array.push({ icon: amapIcon, desc: 'AMAP référencé dans l\'annuaire cetcal.' });

var cetAnnuaireIcon_magasinBio = L.icon({
  iconUrl: 'res/content/pictos_site_CAL/magasin.gif',
  iconSize: [50, 50],
  popupAnchor: [0, -20],
  type: 'Magasin BIO'
});
icons_array.push({ icon: cetAnnuaireIcon_magasinBio, desc: 'Magasin, boutique ou épicerie BIO (produits certifiés AB).' });

var associationsIcon = L.icon({
  iconUrl: 'res/content/icons/bonpour1tour/withbg/assodist.png',
  iconSize: [50, 50],
  popupAnchor: [0, -20],
  type: 'Associations liées à la BIO Locale'
});
icons_array.push({ icon: associationsIcon, desc: 'Associations liée à la BIO Locale (distribution possible)' });

L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
  attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
  maxZoom: 18,
  id: 'mapbox/outdoors-v11', // voir res/data/datafiles/cet.annuaire.liste.styles.mapbox
  tileSize: 512,
  zoomOffset: -1,
  accessToken: 'pk.eyJ1IjoiZGVjaWRlbGFiaW9sb2NhbGUiLCJhIjoiY2t4c3J1b3pmMTV4cDJzbXZ6aWtxOTNrbiJ9.UrHhSVL477MEsqwLPJubrQ'
}).addTo(cetcrtmainmap);

$('producteur').each(function (i) {

  /**
   * Si le producteur est en erreure de cartographie mapbox du à l'adresse de sa ferme alors passer.
   * Dans ce cas, le producteur est toppé à ERR dans la table cartographie.
   */
  if ($(this).find('latlng').text().indexOf('ERROR') != -1) return;

  var pkprd = $(this).find('pk').text();
  var categorie = $(this).find('categorie').text();
  var adrcrt = $(this).find('addresscrt').text();
  var coordinatesLl = $(this).find('latlng').text().split('/');
  let adr = $(this).find('address').text();
  let email = $(this).find('email').text();
  let np = $(this).find('nom').text() + ' ' + $(this).find('prenom').text();
  let nomFerme = $(this).find('nomferme').text();
  let urlwww = $(this).find('urlwww').text().toLowerCase();
  let urlwwwboutique = $(this).find('urlboutique').text().toLowerCase();
  let fournisseurcet = $(this).find('fournisseurcet').text().toLowerCase();
  var fb = $(this).find('urlfb').text();
  var ig = $(this).find('urlig').text();
  var logo_ferme = $(this).find('logoferme').text();
  var inscrit = $(this).find('prodinscrit').text();
  var produits_ltrl = $(this).find('produitsltrl').text();
  var marches_ltrl = $(this).find('marchesltrl').text();
  var lieux_ltrl = $(this).find('lieuxltrl').text();
  var infos_ltrl = $(this).find('infosltrl').text();
  let is_certif_bioab = $(this).find('certifbioab').text();
  let url_certif_bioab = $(this).find('certifbioaburl').text();

  if (ig.length > 3 && (ig.indexOf('http://www.instagram') < 0 ||
    ig.indexOf('https://www.instagram') < 0)) ig = 'https://www.instagram.com/' + ig;
  var htmlFB = '';
  var htmlIG = '';
  var htmlMiniFiche = '<p class="cet-cartographie-popup" style="font-size: 16px;" data="' + pkprd + '">' +
    '<span class="cet-ann-crt-head-text">' + nomFerme
    + (logo_ferme.length > 0 ? '<img class="mini-fiche-logo-element" src="' + logo_ferme + '"/>' : '')
    + '</span><br>' + adr;
  if (inscrit.trim() === 'true') {
    htmlMiniFiche += '<br><email>' + email + '</email>';
  }
  if (urlwww.length > 3) htmlMiniFiche +=
    '<br><a href="' + urlwww + '" target="_blank">Visiter le site Web</a>';
  if (urlwwwboutique.length > 3) htmlMiniFiche +=
    '<br><a href="' + urlwwwboutique + '" target="_blank">Visiter la boutique en ligne</a>';
  if (inscrit.trim() === 'true' || inscrit.trim() === 'amdif') {
    htmlMiniFiche += '<br><a class="cet-crt-link" href="./?statut=fichedetailleeprd&anr=true&pkprd=' + pkprd + '" target="_blank">Voir la fiche détaillée</a>';
  } else {
    htmlMiniFiche += '<br>Produits: <span style="color:green;">' + produits_ltrl + '</span>' +
      '<br>Marchés: <span style="color:blue;">' + marches_ltrl + '</span>' +
      '<br>Lieux de distribution: <span style="color:orange;">' + lieux_ltrl + '</span>' +
      '<br>Infos: <span style="color:darkcyan;">' + infos_ltrl + '</span>';
  }
  htmlMiniFiche += '<br>'; // back to line for social media icon links.
  if (fb.length > 3) htmlFB =
    '<a href="' + fb + '" target="_blank"><img class="cet-crt-icon" src="/res/content/icons/facebook-flat-icon.png" height="20"/></a>';
  htmlMiniFiche += htmlFB;
  if (ig.length > 3) htmlIG =
    '<a href="' + ig + '" target="_blank"><img class="cet-crt-icon" src="/res/content/icons/ig-flat-icon_256.png" height="20" /></a>';
  htmlMiniFiche += htmlIG;
  htmlMiniFiche += '<span style="float:right; margin-right: -4px !important;">n°' + pkprd + '</span>'
  htmlMiniFiche += '<br></p>';

  var icon_carto = undefined;
  /*
  Remplacer par une icon en fonction de la catégorie
  icon_carto = (inscrit.trim() === 'true') ? cetAnnuaireIcon_inscrit : cetAnnuaireIcon;
  icon_carto = (is_certif_bioab === 'true') ? cetAnnuaireIcon_bioab : icon_carto;
  */
  switch (categorie) {
    case "algues":
      icon_carto = cetIconAlgues;
      break;
    case "apiculteur":
      icon_carto = cetIconApiculteur;
      break;
    case "boulanger_patissier":
      icon_carto = cetIconBoulangerPatissier;
      break;
    case "brasseur":
      icon_carto = cetIconBrasseur;
      break;
    case "champignons":
      icon_carto = cetIconChampignons;
      break;
    case "circuit_court":
      icon_carto = cetIconCircuitCourt;
      break;
    case "conserves_confitures":
      icon_carto = cetIconConserveConfiture;
      break;
    case "coop":
      icon_carto = cetIconCoop;
      break;
    case "fromages":
      icon_carto = cetIconFromage;
      break;
    case "fruits":
      icon_carto = cetIconFruits;
      break;
    case "glaces_sorbets":
      icon_carto = setIconGlacesSorbets;
      break;
    case "grandescultures_cereales":
      icon_carto = cetIconGrandesCulturesCereales;
      break;
    case "horticulteur":
      icon_carto = cetIconHorticulteur;
      break;
    case "laitier":
      icon_carto = cetIconLaitier;
      break;
    case "legumes":
      icon_carto = cetIconLegumes;
      break;
    case "oeufs":
      icon_carto = cetIconOeufs;
      break;
    case "pecheur_coquillages":
      icon_carto = cetIconPecheurCoquillages;
      break;
    case "plantes":
      icon_carto = cetIconPlantes;
      break;
    case "semencier_graines":
      icon_carto = cetIconSemencierGraines;
      break;
    case "viande":
      icon_carto = cetIconViande;
      break;
    case "viticulteur":
      icon_carto = cetIconViticulteur;
      break;
    default:
      icon_carto = cetIconProducteur;
      break;
  }
  var marker = L.marker([coordinatesLl[1], coordinatesLl[0]], { icon: icon_carto });
  var popupOptions = {};
  var popup = L.popup(popupOptions, marker);
  popup.setContent(htmlMiniFiche);
  marker.bindPopup(popup);

  // Append to cluster marker group and add marker to global array.
  clusters.addLayer(marker);
  marker_collection.push({ type: icon_carto.options.type, mrkr: marker });
});

$('entite').each(function (i) {

  if ($(this).find('latlng').text().indexOf('ERROR') != -1) return;

  var entpk = $(this).find('pk').text();
  var type = $(this).find('type').text();
  var coordinatesLl = $(this).find('latlng').text().split('/');
  let denomination = $(this).find('denomination').text();
  let adresse = $(this).find('adresse').text();
  let email = $(this).find('email').text();
  var logo_entite = $(this).find('logoentite').text();

  var entite_icon = undefined;
  if (type === 'marche') entite_icon = cetAnnuaireMarcheIcon;
  else if (type === 'amap') entite_icon = amapIcon;
  else if (type === 'mbio') entite_icon = cetAnnuaireIcon_magasinBio;
  else entite_icon = associationsIcon;

  var marker = L.marker(
    [coordinatesLl[1], coordinatesLl[0]], { icon: entite_icon }
  );
  var popupOptions = {};
  var popup = L.popup(popupOptions, marker);
  popup.setContent('<span class="cet-ann-crt-popuptext-marches" data="' + entpk + '">' + denomination + '</span>'
    + (logo_entite.length > 0 ? '<p class="mini-fiche-logo-element-container"><img class="mini-fiche-logo-element" src="' + logo_entite + '" /></p>' : '')
    + '<br>' + adresse
    + '<br><a href="./?statut=fichedetaillee.lieudevente&anr=true&type=' + type + '&q=' + denomination + '" target="_blank">Voir plus d\'informations</a>');
  marker.bindPopup(popup);

  // Append to cluster marker group and add marker to global array.
  clusters.addLayer(marker);
  marker_collection.push({ type: entite_icon.options.type, mrkr: marker });
});

/**
 * Finally, append clusterized markers to map :
 */
cetcrtmainmap.addLayer(clusters);

/* *****************************************/
/* 40 km & 10 km autour de castillon.***************/
L.circle([44.854, -0.043], {
  color: "red",
  fillColor: "red",
  fillOpacity: 0,
  radius: 1 * 10000.0,
  interactive: false
}).addTo(cetcrtmainmap);
L.circle([44.854, -0.043], {
  color: "red",
  fillColor: "red",
  fillOpacity: 0,
  radius: 4 * 10000.0,
  interactive: false
}).addTo(cetcrtmainmap);
var popupC1 = L.popup()
  .setLatLng([44.854, -0.043])
  .setContent('<p style="color:rgb(20,30,20);"><span style="font-weight:bold; color:red;">_____</span> Rayon de 10 et 40 km autour de<br>Castillon-la-Bataille')
  .openOn(cetcrtmainmap);
/* *****************************************/

// Naviagation vers geoloc client si acceptée.
function cartographieFlyTo(latlng, spliter) {
  scrollTowardsId('cet-annuaire-crt-main-anchor', 0);
  var lL = latlng.split(spliter);
  cetcrtmainmap.flyTo([lL[1], lL[0]], fly_to_zoom_factor, { animate: true, duration: 1.5 });
}

/** **********************************************************************************************/
$('#valider-recherche-commune-cartographie').on('mousedown', function () {
  var c = $('#cet-annuaire-recherche-communes-value').val().trim();
  if (c.length < 2) return;
  if (commune_cible !== undefined && commune_cible.length > 2) c = commune_cible;
  updateCommune(c);
});

var cetGeoLoc = new CETGeoLoc();
var geoLocLatLng = cetGeoLoc.init(cetcrtmainmap, cetIciIcon, init_zoom_factor);

$('#parametres-recherche-detaillee-carto-cet-toggle').on('mousedown', function () {
  $('#parametres-recherche-detaillee-carto-cet').slideToggle(600);
});
$('#siste-styles-mapbox-style-appliquer').on('mousedown', function () {
  cetcrtmainmap.setStyle('mapbox://styles/mapbox/' + $('#liste-styles-mapbox-style').find(":selected").val());
});

/** ******************************************************************************************
 * Dropdown de filtres et événements DOM liés.
 */
// Listing des icones + descriptions.
for (var i = 0; i < icons_array.length; i++) {
  $('#liste-icones-fonctions').append('<li style="margin-bottom: 6px;"><img style="width:50px;" src="'
    + icons_array[i].icon.options.iconUrl
    + '" />&#160;&#160;' + icons_array[i].desc + '</li>');
  $('div#dropdown-filtres-cartographie-liste').append(
    '<div class="form-check form-group mb-3 cet-cartographie-filtre-input-container">'
    + '<input class="form-check-input cet-cartographie-filtre-input" type="checkbox" value="'
    + icons_array[i].icon.options.type
    + '" id="cet-cartographie-filtre-'
    + icons_array[i].icon.options.type
    + '" checked="checked"><label class="form-check-label" for="cet-cartographie-filtre-'
    + icons_array[i].icon.options.type + '"><img src="' + icons_array[i].icon.options.iconUrl
    + '" height="32" />&#160;&#160;' + icons_array[i].icon.options.type + '</label></div>');
}

$('div#dropdown-filtres-cartographie-liste').append('<button class="btn cet-navbar-btn cet-navbar-btn-small" id="valider-filtres-types-cartographie" type="button" data-toggle="dropdown">Appliquer les filtres</button>');

$('#dropdown-filtres-count').html(marker_collection.length + ' éléments sur carte');
$('#total-elements-cartographies-visibles').text(marker_collection.length);

$('#dropdown-filtres-cartographie-dropdown').on('hide.bs.dropdown', function (e) {
  e.stopPropagation(); e.preventDefault();
});

$('#valider-filtres-types-cartographie').on('mousedown', function () {
  filtres_actifs = [];
  $('.cet-cartographie-filtre-input').each(function () {
    if ($(this).is(':checked')) filtres_actifs.push($(this).val());
  });
  $('#dropdown-filtres-cartographie-liste').removeClass('show');
  appliquerFiltreCartographie(filtres_actifs);
});

/** ****************************************************************************************** */

function appliquerFiltreCartographie(filtres_actifs) {
  clusters.clearLayers();
  var count = 0;
  for (var i = 0; i < marker_collection.length; i++) {
    if (filtres_actifs.includes(marker_collection[i].type)) {
      clusters.addLayer(marker_collection[i].mrkr);
      ++count;
    }
  }
  $('#dropdown-filtres-count').html(count + ' éléments sur carte');
}

function focusOnBounds(pks) {
  var latlngs = [];
  for (var i = 0; i < marker_collection.length; i++) {
    var html = marker_collection[i].mrkr._popup._content;
    var pk = $(html).attr('data');
    if (pks.includes(pk)) {
      if (marker_collection[i].mrkr.__parent == undefined) continue;
      var latlng = marker_collection[i].mrkr.__parent._latlng;
      latlngs.push(latlng);
    }
  }
  var bounds = new L.LatLngBounds(latlngs);
  cetcrtmainmap.fitBounds(bounds);
}

function updateCommune(c) {
  var found = false;
  for (var i = 0; i < json_communes.length; ++i) {
    if (json_communes[i].libelle === c) {
      cetcrtmainmap.flyTo([json_communes[i].lat, json_communes[i].lng], 13.6,
        { animate: true, duration: 1.5 });
      var marker = L.marker([json_communes[i].lat, json_communes[i].lng]).bindPopup(
        L.popup().setLatLng("[json_communes[i].lat, json_communes[i].lng]"
        ).setContent(json_communes[i].libelle).openOn(cetcrtmainmap)
      ).addTo(cetcrtmainmap);
      found = true;
      break;
    }
  }
}

function dessinerRayon(commune, rayon) {
  if (commune.length < 1 && rayon <= 0) return;
  for (var i = 0; i < json_communes.length; ++i) {
    if (json_communes[i].libelle === commune) {
      if (global_rav_circle !== null) cetcrtmainmap.removeLayer(global_rav_circle);
      global_rav_circle = L.circle([json_communes[i].lat, json_communes[i].lng], {
        color: "green",
        fillColor: "green",
        fillOpacity: 0.04,
        radius: rayon * 1000.0,
        interactive: false
      });
      global_rav_circle.addTo(cetcrtmainmap);
    }
  }
}

function ravElementFocus(pk_elem, dataType) {

  for (var i = 0; i < marker_collection.length; i++) {
    if (marker_collection[i].type.indexOf('Producteur') !== -1 && dataType === 'producteur') {
      var html = marker_collection[i].mrkr._popup._content;
      var pk = $(html).attr('data');
      if (pk_elem == pk) {
        var latlng = marker_collection[i].mrkr.__parent._latlng;
        cetcrtmainmap.flyTo([latlng.lat, latlng.lng], 14, { animate: false, duration: 0 });
        marker_collection[i].mrkr.fire('click');
      }
    } else if (marker_collection[i].type.indexOf('Producteur') === -1 && dataType === 'entite') {
      var html = marker_collection[i].mrkr._popup._content;
      var pk = $(html).attr('data');
      if (pk_elem == pk) {
        var latlng = marker_collection[i].mrkr.__parent._latlng;
        cetcrtmainmap.flyTo([latlng.lat, latlng.lng], 14, { animate: false, duration: 0 });
        marker_collection[i].mrkr.fire('click');
      }
    }
  }
}

function ajouterProduit(produit) {
  if ($("#cet-annuaire-recherche-produits-value").val() != '') {
    var this_id = 'rav-produit-' + preparerId($("#cet-annuaire-recherche-produits-value").val());
    var this_data = $("#cet-annuaire-recherche-produits-value").val();
    var found = false;
    $('.rav-produit-critere').each(function () {
      if ($(this).attr('data') == this_data) {
        alert('élément déjà sélectionné.'); found = true; return;
      }
    });
    if (!found) {
      $('#rav-produits-selected').append('<span id="' + this_id
        + '" class="badge badge-primary rav-produit-critere" style="margin-right: 6px;"'
        + ' data="' + this_data + '">' + this_data
        + '<span onmousedown="$(\'#' + this_id + '\').remove();">'
        + '&#160;<i class="fas fa-times rav-produit-critere-supprimer"></i></span></span>');
      $('#cet-annuaire-recherche-produits-conatiner .typeahead').typeahead('val', '');
    }
  }
}

/** *********************************************************************************
 * Initialisation de la recherche avancée sur event show de la modal.
 */
var rav_loaded = false;
function lancerRechercheAvancee() {

  if (rav_loaded) {
    $('#zone-homepage-recherche-avancee').show();
    return;
  }
  $('#cet-annuaire-crt-main').height($(window).height() * 0.76);

  rav_loaded = true;
  var distinct_produits = [];
  $.ajax({
    url: '/src/app/controller/cet.annuaire.controller.distinct.produits.php',
    success: function (json) {
      var prds = JSON.parse(json);
      json_distinct_produits = prds;
      for (var i = 0; i < prds.length; ++i) distinct_produits.push(prds[i].nom);
    },
    error: function (jqXHR, textStatus, errorThrown) {
      console.log(textStatus, errorThrown);
    }
  });

  $.ajax({
    url: '/src/app/controller/cet.annuaire.controller.types.entites.php',
    success: function (json) {
      var ents = JSON.parse(json);
      var distinct_ents = ents;
      for (var i = 0; i < ents.length; ++i) {
        $('#rav-categorie').append('<option value="' + ents[i].type + '" data-type="entite" '
          + 'data="' + ents[i].type + '">' + ents[i].type + '</option>');
      }
    },
    error: function (jqXHR, textStatus, errorThrown) {
      console.log(textStatus, errorThrown);
    }
  });

  $("#rav-rayon").attr('disabled', 'disabled');
  $('#cet-annuaire-recherche-communes-conatiner .typeahead').on('typeahead:selected', function (evt, item) {
    if ($('input#cet-annuaire-recherche-communes-value').val().length > 0) {
      $("#rav-rayon").removeAttr('disabled');
    } else {
      $("#rav-rayon").attr('disabled', 'disabled');
    }
  });
  $('#cet-annuaire-recherche-communes-value').on('blur', function () {
    if ($('input#cet-annuaire-recherche-communes-value').val().length > 0) {
      $("#rav-rayon").removeAttr('disabled');
    } else {
      $("#rav-rayon").attr('disabled', 'disabled');
    }
  });

  // Recherche avancée :
  $('#cet-annuaire-recherche-communes-conatiner .typeahead').typeahead({
    hint: true,
    highlight: true,
    minLength: 1
  },
    {
      name: 'communes',
      source: substringMatcher(communes)
    });
  if (global_commune != null) {
    $('#cet-annuaire-recherche-communes-conatiner .typeahead').val(global_commune);
    $("#rav-rayon").removeAttr('disabled');
  }

  $('#cet-annuaire-recherche-produits-conatiner .typeahead').typeahead({
    hint: true,
    highlight: true,
    minLength: 1
  },
    {
      name: 'distinct_produits',
      source: substringMatcher(distinct_produits)
    });
  $('#cet-annuaire-recherche-produits-conatiner .typeahead').on('typeahead:selected', function (evt, item) {
    ajouterProduit(item);
  });

  $('#rav-envoi-recherche-avancee').on('mousedown', function (e) {
    $('#categories-rav-dropdown-container').dropdown('hide');
    var json_rav = {};
    json_rav.rav = true;
    json_rav.commune = $('input#cet-annuaire-recherche-communes-value').val();
    json_rav.rayon = $("#rav-rayon").find(":selected").val();
    json_rav.categories = [];
    $('.rav-categories-checkbox').each(function () {
      if ($(this).is(':checked') && $(this).attr('data-type') === 'producteur') json_rav.categories.push($(this).val());
    });
    json_rav.entite_types = [];
    $('.rav-categories-checkbox').each(function () {
      if ($(this).is(':checked') && $(this).attr('data-type') === 'entite') json_rav.entite_types.push($(this).val());
    });
    json_rav.produits = [];
    $('.rav-produit-critere').each(function () {
      json_rav.produits.push($(this).attr('data'));
    });
    json_rav.criteresplus = $('#rav-critere').val();
    json_rav.certification = $("select#rav-certification").find(":selected").val();
    json_rav.modesvente = [];
    fetchResultatsRechercheAvancee(json_rav);
    dessinerRayon(json_rav.commune, json_rav.rayon);
  });

  $('#zone-homepage-recherche-avancee').show();
  $('#cet-annuaire-recherche-communes-value').attr('placeholder', 'Rechercher votre commune');
  $('#homepage-seachbar-container').hide('slow');
}
/** *************************************************************************************/

$('.categories-rav-dropdown').on('click', function (event) {
  // The event won't be propagated up to the document NODE and 
  // therefore delegated events won't be fired
  event.stopPropagation();
});

function preparerId(str) {
  return str.replaceAll(' ', '').replaceAll(',', '');
}
